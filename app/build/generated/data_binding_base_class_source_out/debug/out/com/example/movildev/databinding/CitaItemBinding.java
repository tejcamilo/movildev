// Generated by view binder compiler. Do not edit!
package com.example.movildev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movildev.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CitaItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button accederBtn;

  @NonNull
  public final Button cancelarBtn;

  @NonNull
  public final LinearLayout citaCard;

  @NonNull
  public final LinearLayout col1;

  @NonNull
  public final TextView detalleCita;

  @NonNull
  public final TextView detalleModalidad;

  @NonNull
  public final TextView detalleProfesional;

  @NonNull
  public final TextView detalleTipo;

  @NonNull
  public final LinearLayout fechaCita;

  @NonNull
  public final LinearLayout modalidad;

  @NonNull
  public final LinearLayout profesional;

  @NonNull
  public final Button reprogramarBtn;

  @NonNull
  public final LinearLayout tipoCita;

  private CitaItemBinding(@NonNull FrameLayout rootView, @NonNull Button accederBtn,
      @NonNull Button cancelarBtn, @NonNull LinearLayout citaCard, @NonNull LinearLayout col1,
      @NonNull TextView detalleCita, @NonNull TextView detalleModalidad,
      @NonNull TextView detalleProfesional, @NonNull TextView detalleTipo,
      @NonNull LinearLayout fechaCita, @NonNull LinearLayout modalidad,
      @NonNull LinearLayout profesional, @NonNull Button reprogramarBtn,
      @NonNull LinearLayout tipoCita) {
    this.rootView = rootView;
    this.accederBtn = accederBtn;
    this.cancelarBtn = cancelarBtn;
    this.citaCard = citaCard;
    this.col1 = col1;
    this.detalleCita = detalleCita;
    this.detalleModalidad = detalleModalidad;
    this.detalleProfesional = detalleProfesional;
    this.detalleTipo = detalleTipo;
    this.fechaCita = fechaCita;
    this.modalidad = modalidad;
    this.profesional = profesional;
    this.reprogramarBtn = reprogramarBtn;
    this.tipoCita = tipoCita;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CitaItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CitaItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cita_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CitaItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acceder_btn;
      Button accederBtn = ViewBindings.findChildViewById(rootView, id);
      if (accederBtn == null) {
        break missingId;
      }

      id = R.id.cancelar_btn;
      Button cancelarBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelarBtn == null) {
        break missingId;
      }

      id = R.id.cita_card;
      LinearLayout citaCard = ViewBindings.findChildViewById(rootView, id);
      if (citaCard == null) {
        break missingId;
      }

      id = R.id.col1;
      LinearLayout col1 = ViewBindings.findChildViewById(rootView, id);
      if (col1 == null) {
        break missingId;
      }

      id = R.id.detalle_cita;
      TextView detalleCita = ViewBindings.findChildViewById(rootView, id);
      if (detalleCita == null) {
        break missingId;
      }

      id = R.id.detalle_modalidad;
      TextView detalleModalidad = ViewBindings.findChildViewById(rootView, id);
      if (detalleModalidad == null) {
        break missingId;
      }

      id = R.id.detalle_profesional;
      TextView detalleProfesional = ViewBindings.findChildViewById(rootView, id);
      if (detalleProfesional == null) {
        break missingId;
      }

      id = R.id.detalle_tipo;
      TextView detalleTipo = ViewBindings.findChildViewById(rootView, id);
      if (detalleTipo == null) {
        break missingId;
      }

      id = R.id.fecha_cita;
      LinearLayout fechaCita = ViewBindings.findChildViewById(rootView, id);
      if (fechaCita == null) {
        break missingId;
      }

      id = R.id.modalidad;
      LinearLayout modalidad = ViewBindings.findChildViewById(rootView, id);
      if (modalidad == null) {
        break missingId;
      }

      id = R.id.profesional;
      LinearLayout profesional = ViewBindings.findChildViewById(rootView, id);
      if (profesional == null) {
        break missingId;
      }

      id = R.id.reprogramar_btn;
      Button reprogramarBtn = ViewBindings.findChildViewById(rootView, id);
      if (reprogramarBtn == null) {
        break missingId;
      }

      id = R.id.tipo_cita;
      LinearLayout tipoCita = ViewBindings.findChildViewById(rootView, id);
      if (tipoCita == null) {
        break missingId;
      }

      return new CitaItemBinding((FrameLayout) rootView, accederBtn, cancelarBtn, citaCard, col1,
          detalleCita, detalleModalidad, detalleProfesional, detalleTipo, fechaCita, modalidad,
          profesional, reprogramarBtn, tipoCita);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
