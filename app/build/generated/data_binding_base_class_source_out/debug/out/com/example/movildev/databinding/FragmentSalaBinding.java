// Generated by view binder compiler. Do not edit!
package com.example.movildev.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movildev.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSalaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout fechaCita;

  @NonNull
  public final ImageButton ingresarLlamadaBtn;

  @NonNull
  public final LinearLayout profesional;

  @NonNull
  public final LinearLayout salaBody;

  @NonNull
  public final LinearLayout tipoCita;

  private FragmentSalaBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout fechaCita,
      @NonNull ImageButton ingresarLlamadaBtn, @NonNull LinearLayout profesional,
      @NonNull LinearLayout salaBody, @NonNull LinearLayout tipoCita) {
    this.rootView = rootView;
    this.fechaCita = fechaCita;
    this.ingresarLlamadaBtn = ingresarLlamadaBtn;
    this.profesional = profesional;
    this.salaBody = salaBody;
    this.tipoCita = tipoCita;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSalaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSalaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sala, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSalaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fecha_cita;
      LinearLayout fechaCita = ViewBindings.findChildViewById(rootView, id);
      if (fechaCita == null) {
        break missingId;
      }

      id = R.id.ingresar_llamada_btn;
      ImageButton ingresarLlamadaBtn = ViewBindings.findChildViewById(rootView, id);
      if (ingresarLlamadaBtn == null) {
        break missingId;
      }

      id = R.id.profesional;
      LinearLayout profesional = ViewBindings.findChildViewById(rootView, id);
      if (profesional == null) {
        break missingId;
      }

      id = R.id.sala_body;
      LinearLayout salaBody = ViewBindings.findChildViewById(rootView, id);
      if (salaBody == null) {
        break missingId;
      }

      id = R.id.tipo_cita;
      LinearLayout tipoCita = ViewBindings.findChildViewById(rootView, id);
      if (tipoCita == null) {
        break missingId;
      }

      return new FragmentSalaBinding((LinearLayout) rootView, fechaCita, ingresarLlamadaBtn,
          profesional, salaBody, tipoCita);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
